---
title: "Read and Compute Gages"
format: html
editor: visual
---

Quarto markdown to read in gages from CAMELS data set, compute hydrologic signatures.

## Read in Libraries:

```{r, echo=FALSE}
#install.packages("data.table")

library(tidyverse)
library(ggforce)
library(ggplot2)
library(gridExtra)
library(lubridate)
library(dplyr)
library(readr)
library(data.table)
library(leaflet)
library(car)


#USGS package with flow info
library(dataRetrieval)

#Packages working with geospatial data
library(sf)
library(tmap)
library(tmaptools)
library(mapview)

#Mapping Packages
library(viridis)
library(RColorBrewer)
library(patchwork)

```

## Read in gauges from CAMELS dataset:

'camels_hydro' is the dataset using CAMELS gauges and computing signatures:

-   flow mean (q_mean), runoff ratio, slope flow duration (slope_fdc), baseflow index, steam elasticity, q5, q95, high flow freq, low flow freq, zero flow freq,

```         
```

```{r}
## Read in gauges from CAMELS dataset:

#'camels_hydro' is the dataset using CAMELS gauges and computing signatures:

#flow mean (q_mean), runoff ratio, slope flow duration (slope_fdc), baseflow index, steam elasticity, q5, q95, high flow freq, low flow freq, zero flow freq,

camels_hydro <- read_delim("CAMELS Data/camels_hydro.txt")

#All other CAMELS data
camels_all <- full_join(read_delim("CAMELS Data/camels_clim.txt"),
                                     read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") |>
  full_join(read_delim("CAMELS Data/camels_hydro.txt"), by = "gauge_id") |>
  full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id") |>
  full_join(read_delim("CAMELS Data/camels_topo.txt"), by = "gauge_id") |>
  full_join(read_delim("CAMELS Data/camels_vege.txt"), by = "gauge_id") |> 
  full_join(read_delim("CAMELS Data/camels_name.txt"), by = "gauge_id")

#View Camels hydrology:
head(camels_hydro)

```

## RBI and Mean Annual Discharge

```{r}

#Read in CONUS daily flow gages

q_data  <-  read.csv("C:/Users/Logan/Desktop/College/Coursework/Junior Year/Research Project/data/CAMELS_qdv.csv")

q_data$date <- as.Date(q_data$date)

q_data <- q_data %>%
  filter(date >= as.Date("1989-10-01") & date <= as.Date("2009-09-30"))

# Turn gauge id column from number to character

#q_data = DailyQ

q_data$gauge_id <- as.character(q_data$gauge_id)

# Add zero to gauge id ONLY IF the length is < 8
q_data$gauge_id <- ifelse(nchar(q_data$gauge_id) < 8, paste0("0", q_data$gauge_id), q_data$gauge_id)

#Group by gauge id, lag flow by one day
RBI <-  q_data %>% 
  group_by(gauge_id) %>% 
  mutate(discharge_change = Qmm_day - lag(Qmm_day, default = first(Qmm_day)),
         abs_discharge_change = abs(discharge_change)) %>% 
summarize(RBI = sum(abs_discharge_change, na.rm = TRUE)/sum(Qmm_day)) 

RBI$gauge_id <- as.character(RBI$gauge_id)

RBI$gauge_id <- ifelse(nchar(RBI$gauge_id) < 8, paste0("0", RBI$gauge_id), RBI$gauge_id)

# Check data for NA's
find_NA_lines <- function(data, column_name) {
  na_lines <- which(is.na(data[[column_name]]))
  return(na_lines)
}

NA_lines <- find_NA_lines(RBI, "RBI")

###Join to camels_all

camels_all = right_join(RBI, camels_all, by=c('gauge_id'))

### Mean Annual Discharge


#mean_annual_discharge = q_data %>%
  #group_by(gauge_id) %>%
#summarize(Qmean_mm_yr = mean(Qmm_day))


#Join data to camels_hydro data
#camels_all <- left_join(camels_all, RBI, by = "gauge_id")
#camels_all <- left_join(camels_all,mean_annual_discharge, by = "gauge_id")

#write.csv(camels_all,"C:\\Users\\Logan\\Desktop\\College\\Coursework\\Junior Year\\Second Semester\\Analysis in GIS\\ESDA\\ESDA\\camels_all.csv")

#Write out dataframe with RBI and gauge ID
#computed_metrics = left_join(RBI, mean_annual_discharge, by = "gauge_id")
#write_csv(computed_metrics, "CAMELS Data/computed_metrics.csv")

#Write out joined file (camels_hydro + camels_rbi)
#write_csv(camels_all, "CAMELS Data/camels_all.csv")

```

## Combining USGS Data with CAMELS:

```{r}
##### reading in USGS with CAMELS 

USGS = st_read("C:\\Users\\Logan\\Desktop\\College\\Coursework\\Junior Year\\Research Project\\data\\Gages_physio shp")

USGS_select = select(USGS, SOURCE_FEA, SOURCE_ORI, FEATUREDET, Measure, EventType, FLComID, AREA, PERIMETER, PHYSIODD_, PHYSIODD_I, FCODE, FENCODE, DIVISION, PROVINCE, SECTION, PROVCODE, geometry)

camels_tempjoin = right_join(USGS_select, camels_all, by=c('SOURCE_FEA'='gauge_id'))

# Filter rows based on the condition
camels_joined <- filter(camels_tempjoin, SOURCE_FEA != "03281100")

#### case_when()

camels_joined = mutate(camels_joined, CONUS = "CONUS")

camels_joined <- camels_joined %>%
  mutate(CONUS = case_when(
    PROVINCE == "BLUE RIDGE" ~ "APPS",
    PROVINCE == "VALLEY AND RIDGE" ~ "APPS",
    PROVINCE == "APPALACHIAN PLATEAUS" ~ "APPS",
    TRUE ~ "CONUS"
  ))

###Changing Variable Name and Adding APPs duplicates to CONUS dataset

app_gauges = filter(camels_joined, CONUS == "APPS")

app_gauges$CONUS[app_gauges$CONUS == "APPS"] <- "CONUS"
View(app_gauges_CONUS)

camels_final = rbindlist(list(camels_joined,app_gauges))

#write.csv(camels_final,"C:/Users/Logan/Desktop/College/Coursework/Junior Year/Research Project/data/camels_final.csv")


```

```{r}

```

## Creating Study Area Map

sf_use_s2(TRUE)

```{r}

App_regions = st_read("Data/Shapefiles/AppalachianRegions.shp")
#GagesII = st_read("Data/Shapefiles/gagesII_9322_sept30_2011.shp")
physio_regions = st_read("Data/Shapefiles/physio.shp")
watersheds = st_read("Mapping Data/small_ws")
states = st_read("Mapping Data/cb_2018_us_state_20m") |>
  filter(NAME != "Alaska",
         NAME != "Hawaii",
         NAME != "Puerto Rico")

####select mean annual discharge, mean winter discharge, mean summer discharge, high flow (90%), low flow (10%), BFI, runoff ratio, and RBI

#app_states = select(filter(states, NAME=="Florida","Georgia","Alabama","South Carolina","North Carolina","Tennessee","Kentucky","West Virgina","Virginia","Maryland","Delaware","Ohio","Pennsylvania","New Jersey","New York","Massachusetts","Rhode Island","Conneticut","New Hampshire","Vermont","Maine","District of Columbia"))

###mapping

mapview(camels_joined)

mapview(app_gauges)

camels_mapping = st_sf(camels_joined)

#### tmap
theme_set(theme_classic())

tmap_mode("plot")

tmap_options(check.and.fix = TRUE)

###maps with Lindsey code

USgages_BFI <- 
  tm_shape(camels_joined)+
  tm_dots(col = "baseflow_index", palette = "viridis", size = 0.15, title="", style="quantile", n=6) + 
  # controls symbology: what field, color, size
  tm_shape(states)+ # add states in background
  tm_borders() +
  tm_layout(legend.title.size = 1,
            legend.text.size = 0.6,
            legend.position = c("left","bottom"),
            title.position = c("center","top"),
            #legend.bg.color = "white",
            legend.bg.alpha = 1, 
            title = "Baseflow Index",
            inner.margins = c(0.13,0.03,0.13,0.03))

#USgages_BFI2 <- 
  #tm_shape(camels_joined)+
  #tm_dots(col = "baseflow_index", palette = "viridis", size = 0.15, title = "Baseflow Index") + 
  #tm_shape(states)+ # add states in background
  #tm_borders() +
  #tm_layout(legend.title.size = 1,
            #legend.text.size = 0.6,
            #legend.position = c("right","bottom"),
            #legend.bg.color = "white",
            #legend.bg.alpha = 1)

USgages_Q5 <- 
  tm_shape(camels_joined)+
  tm_dots(col = "q5", palette = "viridis", size = 0.15, title = "", style="quantile", n=6) + 
  tm_shape(states)+ # add states in background
  tm_borders() +
  tm_layout(legend.title.size = 1,
            legend.text.size = 0.4,
            legend.position = c("left","bottom"),
            #legend.bg.color = "white",
            legend.bg.alpha = 1,
            title = "Low Flow (Q5)",
            title.position = c("center","top"),
            inner.margins = c(0.13,0.03,0.13,0.03)) # positioning

USgages_Q95 <- 
  tm_shape(camels_joined)+
  tm_dots(col = "q95", palette = "viridis", size = 0.15, title = "", style="quantile", n=6) + 
  tm_shape(states)+ # add states in background
  tm_borders() +
  tm_layout(legend.title.size = 1,
            legend.text.size = 0.4,
            legend.position = c("left","bottom"),
            #legend.bg.color = "white",
            legend.bg.alpha = 1,
            title = "High Flow (Q95)",
            title.position = c("center","top"),
            inner.margins = c(0.13,0.03,0.13,0.03))

USgages_Qmean <- 
  tm_shape(camels_joined)+
  tm_dots(col = "q_mean", palette = "viridis", size = 0.15, title = "", style="quantile", n=6) + 
  tm_shape(states)+ # add states in background
  tm_borders() +
  tm_layout(legend.title.size = 1,
            legend.text.size = 0.4,
            legend.position = c("left","bottom"),
            #legend.bg.color = "white",
            legend.bg.alpha = 1,
            title = "Mean Daily Flow",
            title.position = c("center","top"),
            inner.margins = c(0.13,0.03,0.13,0.03))

USgages_runoffratio <- 
  tm_shape(camels_joined)+
  tm_dots(col = "runoff_ratio", palette = "viridis", size = 0.15, title = "", style="quantile", n=6) + 
  tm_shape(states)+ # add states in background
  tm_borders() +
  tm_layout(legend.title.size = 1,
            legend.text.size = 0.4,
            legend.position = c("left","bottom"),
            #legend.bg.color = "white",
            legend.bg.alpha = 1,
            title = "Runoff Ratio",
            title.position = c("center","top"),
            inner.margins = c(0.13,0.03,0.13,0.03))

USgages_RBI <- 
  tm_shape(camels_joined)+
  tm_dots(col = "RBI", palette = "viridis", size = 0.15, title = "", style="quantile", n=6) + 
  tm_shape(states)+ # add states in background
  tm_borders() +
  tm_layout(legend.title.size = 1,
            legend.text.size = 0.4,
            legend.position = c("left","bottom"),
            #legend.bg.color = "white",
            legend.bg.alpha = 1,
            title = "Richards-Baker Flashiness Index",
            title.position = c("center","top"),
            inner.margins = c(0.13,0.03,0.13,0.03))

Conus_Maps <- tmap_arrange(USgages_Qmean, USgages_Q5, USgages_Q95, USgages_BFI, USgages_runoffratio, USgages_RBI, nrow = 2, ncol = 3)
Conus_Maps

tmap_save(Conus_Maps)

print(USgages_BFI)
print(USgages_Q5)
print(USgages_Q95)
print(USgages_Qmean)
print(USgages_runoffratio)
print(USgages_RBI)


```

Creating Boxplots

```{r}
#### boxplots
#### use ggplot instead of boxplot

#####ESDA Spatial Analysis Class Boxplots
#########select mean annual discharge, mean winter discharge, mean summer discharge, high flow (90%), low flow (10%), BFI, runoff ratio, and RBI

par(mfcol=c(1,4))

boxplot(camels_final$baseflow_index~camels_final$CONUS,xlab="Region",ylab="BFI")

boxplot(camels_final$runoff_ratio~camels_final$CONUS,xlab="Region",ylab="Runoff Ratio")

boxplot(camels_final$q5~camels_final$CONUS,xlab="Region",ylab="Low Flow (5%)")

boxplot(camels_final$q95~camels_final$CONUS,xlab="Region",ylab="High Flow (95%)")

par(mfcol=c(1,4))

boxplot(camels_final$q_mean~camels_final$CONUS,xlab="Region",ylab="Mean Daily Discharge")

boxplot(camels_final$RBI~camels_final$CONUS,xlab="Region",ylab="RBI")

## ggplot boxplots

##example
##camels_final |> 
  #ggplot(aes(CONUS,baseflow_index))+
  #geom_boxplot()

par(mfcol=c(1,1))

baseflow <- ggplot(data=camels_final,aes(x=CONUS,y=baseflow_index))+
  geom_boxplot()+
  coord_flip()+
  ##ggtitle()+
  xlab("")+
  ylab("BFI")+
  geom_boxplot(fill="grey")+
  theme(panel.background = element_rect(fill = "white"))+
  theme(panel.border = element_rect(color = "black", fill = NA, linewidth = .5))+
  theme(
  axis.ticks = element_line(color = "black", linewidth = 0.25),
  panel.grid.major = element_line(color = "black", linetype = "dashed", size = 0.25),
  panel.grid.minor = element_line(color = "black", linetype = "dashed", size = 0.25)
  )

runoff_ratio <- ggplot(data=camels_final,aes(x=CONUS,y=runoff_ratio))+
  geom_boxplot()+
  coord_flip()+
  ##ggtitle()+
  xlab("")+
  ylab("Runoff Ratio")+
  geom_boxplot(fill="grey")+
  theme(panel.background = element_rect(fill = "white"))+
  theme(panel.border = element_rect(color = "black", fill = NA, linewidth = .5))+
  theme(
  axis.ticks = element_line(color = "black", linewidth = 0.25),
  panel.grid.major = element_line(color = "black", linetype = "dashed", size = 0.25),
  panel.grid.minor = element_line(color = "black", linetype = "dashed", size = 0.25)
  )

q5 <- ggplot(data=camels_final,aes(x=CONUS,y=q5))+
  geom_boxplot()+
  coord_flip()+
  ##ggtitle()+
  xlab("")+
  ylab("Low Flow (5%)")+
  geom_boxplot(fill="grey")+
  theme(panel.background = element_rect(fill = "white"))+
  theme(panel.border = element_rect(color = "black", fill = NA, linewidth = .5))+
  theme(
  axis.ticks = element_line(color = "black", linewidth = 0.25),
  panel.grid.major = element_line(color = "black", linetype = "dashed", size = 0.25),
  panel.grid.minor = element_line(color = "black", linetype = "dashed", size = 0.25)
  )

q95 <- ggplot(data=camels_final,aes(x=CONUS,y=q95))+
  geom_boxplot()+
  coord_flip()+
  ##ggtitle()+
  xlab("")+
  ylab("High Flow (95%)")+
  geom_boxplot(fill="grey")+
  theme(panel.background = element_rect(fill = "white"))+
  theme(panel.border = element_rect(color = "black", fill = NA, linewidth = .5))+
  theme(
  axis.ticks = element_line(color = "black", linewidth = 0.25),
  panel.grid.major = element_line(color = "black", linetype = "dashed", size = 0.25),
  panel.grid.minor = element_line(color = "black", linetype = "dashed", size = 0.25)
  )

q_mean <- ggplot(data=camels_final,aes(x=CONUS,y=q_mean))+
  geom_boxplot()+
  coord_flip()+
  xlab("")+
  ylab("Mean Daily Discharge")+
  geom_boxplot(fill="grey")+
  theme(panel.background = element_rect(fill = "white"))+
  theme(panel.border = element_rect(color = "black", fill = NA, linewidth = .5))+
  theme(
  axis.ticks = element_line(color = "black", linewidth = 0.25),
  panel.grid.major = element_line(color = "black", linetype = "dashed", size = 0.25),
  panel.grid.minor = element_line(color = "black", linetype = "dashed", size = 0.25)
  )

RBI <- ggplot(data=camels_final,aes(x=CONUS,y=RBI))+
  geom_boxplot()+
  coord_flip()+
  xlab("")+
  ylab("RBI")+
  geom_boxplot(fill="grey")+
  theme(panel.background = element_rect(fill = "white"))+
  theme(panel.border = element_rect(color = "black", fill = NA, linewidth = .5))+
  theme(
  axis.ticks = element_line(color = "black", linewidth = 0.25),
  panel.grid.major = element_line(color = "black", linetype = "dashed", size = 0.25),
  panel.grid.minor = element_line(color = "black", linetype = "dashed", size = 0.25)
  )

#start a pdf file
pdf("four_plots.pdf")

#arrange the plots on the pdf Page

grid.arrange(q_mean,q5,q95,nrow=4)

dev.off()

pdf("two_plots.pdf")

grid.arrange(baseflow, runoff_ratio, RBI,nrow=4)

dev.off()

### aes sets x and y variables
### make new column in CAMELS with new variable Appregions "yes" or "no"
### use mutate and case_when to create new columb with logic statement

```

Distribution Curves and Statistical Tests

```{r}
####summary statistics


summary(camels_joined$q_mean)
summary(app_gauges$q_mean)

summary(camels_joined$q5)
summary(app_gauges$q5)

summary(camels_joined$q95)
summary(app_gauges$q95)

summary(camels_joined$runoff_ratio)
summary(app_gauges$runoff_ratio)

summary(camels_joined$baseflow_index)
summary(app_gauges$baseflow_index)

summary(camels_joined$RBI)
summary(app_gauges$RBI)

### variance

var(camels_joined$q_mean)
var(app_gauges$q_mean)

var(camels_joined$q5)
var(app_gauges$q5)

var(camels_joined$q95)
var(app_gauges$q95)

var(camels_joined$runoff_ratio)
var(app_gauges$runoff_ratio)

var(camels_joined$baseflow_index)
var(app_gauges$baseflow_index)

var(camels_joined$RBI)
var(app_gauges$RBI)

#### density functions

plot(density(camels_joined$baseflow_index))
plot(density(app_gauges$baseflow_index))

plot(density(camels_density$runoff_ratio))
plot(density(app_gauges$runoff_ratio))

plot(density(camels_joined$q5))
plot(density(app_gauges$q5))

plot(density(camels_joined$q95))
plot(density(app_gauges$q95))

### Levene Test

camels_final$CONUS <- as.factor(camels_final$CONUS)

Levene_qmean <- leveneTest(q_mean ~ CONUS, data=camels_final, center=mean)
print(Levene_qmean)

Levene_q5 <- leveneTest(q5 ~ CONUS, data=camels_final, center=mean)
print(Levene_q5)

Levene_q95 <- leveneTest(q95 ~ CONUS, data=camels_final, center=mean)
print(Levene_q95)

Levene_runoff <- leveneTest(runoff_ratio ~ CONUS, data=camels_final, center=mean)
print(Levene_runoff)

Levene_bfi <- leveneTest(baseflow_index ~ CONUS, data=camels_final, center=mean)
print(Levene_bfi)

Levene_RBI <- leveneTest(RBI ~ CONUS, data=camels_final, center=mean)
print(Levene_RBI)

### Brown Farsythe Test

#install.packages("lawstat")
library(lawstat)

APPs_bfqmean <- app_gauges[app_gauges$q_mean == "qmeanA", "value"]
CONUS_bfqmean <- camels_joined[camels_joined$q_mean == "qmeanB", "value"]

data_list <- list(APPs_bfqmean, CONUS_bfqmean)
                  
bftest_qmean <- bf.test(data_list)
print(bftest_mean)


```

```{r}
####install library
#install.packages("spdep")
library(spdep)

#### Write csv as shapefile
morans_I = st_as_sf(camels_joined, wkt="geometry", crs=102010)

mapview(morans_I)

#### distance matrix

dmatrix <- knn2nb(knearneigh(morans_I, k = 5, longlat=FALSE))
dmatrix <- nb2listw(dmatrix, style = "W", zero.policy=TRUE)

### Univariate Local Moran's I

RBImoran <- localmoran_perm(morans_I$RBI, listw = dmatrix, nsim=999, alternative = "greater")






```
