sitenos <- AppGages$STAID
parameterCd <- "00060"
startDate <- "1981-01-01"
endDate <- "2010-12-31"
#117 gages: 3 groups of 31
for(i in 1:93)
{
if(i == 1){
QdatDV <- readNWISdv(sitenos[i], parameterCd, startDate, endDate)
}else{
QdatDVnew <- readNWISdv(sitenos[i], parameterCd, startDate, endDate)
QdatDV <- rbind(QdatDVnew, QdatDV)
}
}
View(QdatDVnew)
View(QdatDV)
View(gages_all)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggforce)
library(dataRetrieval)
library(sf)
library(tmap)
library(spData)
library(repr)
library(zoo)
library(lubridate)
library(moments)
#install.packages("ContDataQC")
#library(ContDataQC)
library(broom)
library(AICcmodavg)
library(raster)
library(rgdal)
#note: ecohydology doesn't play nice with other packages
#library(EcoHydRology)
tmap_mode("plot")
theme_set(theme_classic())
AppGages <- st_read("Data/Shapefiles/AppGauges_Filtered.shp")
AppRegions <- st_read("Data/Shapefiles/AppalachianRegions.shp")
AppGagesdf <- as.data.frame(AppGages)
AppGages <- AppGages %>%
dplyr::filter(HCDN_2009 == "yes") %>%
dplyr::filter(PROVINCE != "NEW ENGLAND" & PROVINCE != "ADIRONDACK" & SECTION != "SOUTHERN NEW YORK" & SECTION != "CATSKILL")
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "PROVINCE", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(AppGages)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
SectionMap <- tm_shape(AppRegions)+
tm_polygons(col = "SECTION", textNA = "ADIRONDACK", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(AppGages)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
SectionMap
sitenos <- c(AppGages$STAID)
availableData <- whatNWISdata(siteNumber = sitenos, parameterCd = "00060")
AppGages <- full_join(AppGages, availableData, by = c("STAID" = "site_no"))
AppGages <- AppGages %>% dplyr::filter(data_type_cd == "dv", stat_cd == "00003")
View(AppGages)
availableData <- whatNWISdata(siteNumber = sitenos, parameterCd = "00060")
View(availableData)
#Read in gauges
gages_conus <- st_read("Data/Shapefiles/gagesII_9322_sept30_2011.shp")  |>
subset(HCDN_2009 == "yes") |>
subset(STATE != "AK" & STATE != "HI" & STATE != "PR")
library(dplyr)
library(readr)
camels_gages <- list.files(path = "CAMELS Data/", full.names = TRUE )|>
lapply(read_csv) |>
bind_rows()
files <- list.files(pattern = ".*.txt")
?list.files
files <- list.files(path = "CAMELS DATA / ", pattern = ".*.txt")
files <- list.files(path = "CAMELS DATA / ", pattern = ".*.txt")
camels_hydro <- read_delim("CAMELS DATA/camels_hydro.txt")
View(camels_hydro)
View(camels_hydro)
gages_hydro <- left_join(camels_hydro, gages_conus, by = c("gauge_id", "STAID"))
gages_hydro <- left_join(camels_hydro, gages_conus, by = c('gauge_id', 'STAID'))
gages_hydro <- dplyr::left_join(camels_hydro, gages_conus, by = c('gauge_id', 'STAID'))
gages_hydro <- dplyr::left_join(camels_hydro, gages_conus, by = c('gauge_id' = 'STAID'))
View(camels_hydro)
View(gages_hydro)
#We can use 'mapview()' function to view site points:
mapview(gages_hydro, zcol = 'baseflow_index')
View(gages_hydro)
View(gages_conus)
crs(gages_conus)
View(gages_hydro)
View(AppGages)
#We can use 'mapview()' function to view site points:
gages_hydo <- st_as_sf(gages_hydro, coords = "geometry", crs = 8827)
#We can use 'mapview()' function to view site points:
mapview(gages_hydro)
gages_hydro <- merge(gages_conus, camels_hydro, by.x = "STAID", by.y = "gauge_id")
#We can use 'mapview()' function to view site points:
mapview(gages_hydro)
#We can use 'mapview()' function to view site points:
mapview(gages_hydro, zcol = "baseflow_index")
plot(province)
#We can use 'mapview()' function to view site points:
mapview(gages_hydro, zcol = "q_mean")
library(sp)
library(sf)
library(tidyverse)
library(mapview)
library(rgdal)
library(raster)
library(stars)
?raster_extract
??raster_extract
parcel_NPP <- parcel_sample |>
mutate(
NPP_2015 = raster_extract(NPP_2015, parcel_NPP, fun = mean, na.rm = TRUE))
setwd("C:/Users/lfink/Desktop/research data")
#load sample shapefile
parcel_sample <- readOGR("parcel/sample_parcels.shp")
files <- list.files("C:/Users/lfink/Desktop/research data/Imagery GEE/MODIS 500m NPP", pattern = ".tif$", full.names = TRUE)
NPP_2015 <- raster("NPP_500m_2015.tif")
NPP_2016 <- raster("NPP_500m_2016.tif")
NPP_2017 <- raster("NPP_500m_2017.tif")
NPP_2018 <- raster("NPP_500m_2018.tif")
NPP_2019 <- raster('NPP_500m_2019.tif')
NPP_2020 <- raster("NPP_500m_2020.tif")
NPP_2015 <- raster("Imagery GEE/MODIS 500m NPP/NPP_500m_2015.tif")
NPP_2016 <- raster("Imagery GEE/MODIS 500m NPP/NPP_500m_2016.tif")
NPP_2017 <- raster("Imagery GEE/MODIS 500m NPP/NPP_500m_2017.tif")
NPP_2018 <- raster("Imagery GEE/MODIS 500m NPP/NPP_500m_2018.tif")
NPP_2019 <- raster('Imagery GEE/MODIS 500m NPP/NPP_500m_2019.tif')
NPP_2020 <- raster("Imagery GEE/MODIS 500m NPP/NPP_500m_2020.tif")
stack <- stack(NPP_2015, NPP_2016, NPP_2017, NPP_2018, NPP_2019, NPP_2020)
#rename bands
names(stack) <- c('2015', '2016', '2017', '2018', '2019', '2020')
plot(stack)
parcel_NPP <- parcel_sample |>
mutate(
NPP_2015 = raster_extract(NPP_2015, parcel_NPP, fun = mean, na.rm = TRUE))
View(parcel_sample)
#load sample shapefile
parcel_sample <- st_read("parcel/sample_parcels.shp")
parcel_NPP <- parcel_sample |>
mutate(
NPP_2015 = raster_extract(NPP_2015, parcel_NPP, fun = mean, na.rm = TRUE))
parcel_NPP <- parcel_sample |>
mutate(
NPP_2015 = raster::extract(NPP_2015, parcel_NPP, fun = mean, na.rm = TRUE))
#load sample shapefile
parcel_sample <- shapefile("parcel/sample_parcels.shp")
#load sample shapefile
parcel_sample <- readOGR("parcel/sample_parcels.shp")
nval_15 <- extract(NPP_2015, parcel_sample)
camels <- read.delim("CAMELS Data/camels_hydro.txt")
library(tidyverse)
camels_hydro <- read_delim("CAMELS Data/camels_hydro.txt")
?read delim
View(camels_hydro)
#All other CAMELS data
camels_all <- WSfactors <- full_join(read_delim("CAMELS Data/camels_clim.txt"),
read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") %>%
full_join(read_delim("CAMELS Data/camels_hydro.txt"), by = "gauge_id") %>%
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id")
camels_hydro <- read_delim("CAMELS Data/camels_hydro.txt")
#All other CAMELS data
camels_all <- full_join(read_delim("CAMELS Data/camels_clim.txt"),
read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_hydro.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id")
#View Camels hydrology:
head(camels_hydro)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggforce)
library(dataRetrieval)
library(sf)
library(tmap)
library(spData)
library(repr)
library(zoo)
library(lubridate)
library(moments)
#install.packages("ContDataQC")
#library(ContDataQC)
library(broom)
library(AICcmodavg)
library(raster)
library(rgdal)
#note: ecohydology doesn't play nice with other packages
#library(EcoHydRology)
tmap_mode("plot")
theme_set(theme_classic())
AppGages <- st_read("Data/Shapefiles/AppGauges_Filtered.shp")
AppRegions <- st_read("Data/Shapefiles/AppalachianRegions.shp")
AppGagesdf <- as.data.frame(AppGages)
View(AppGages)
View(AppGagesdf)
AppGagesdf <- as.data.frame(AppGages) |>
right_join(y = read_delim("CAMELS Data/camels_hydro.txt"), by = c("STAID", "gauge_id"))
AppGages <- read_delim("CAMELS Data/camels_hydro.txt")
AppRegions <- st_read("Data/Shapefiles/AppalachianRegions.shp")
AppGagesshp <- st_read("Data/Shapefiles/AppGages.shp")
AppGagesshp <- st_read("Data/Shapefiles/AppGauges.shp")
?gather
AppGagesshp <- st_read("Data/Shapefiles/AppGauges.shp") |>
left_join((y = AppGages, by=c('STAID', 'gauge_id')))
AppGagesshp <- st_read("Data/Shapefiles/AppGauges.shp") |>
left_join((y = AppGages, by=c('STAID''gauge_id')))
AppGagesshp <- st_read("Data/Shapefiles/AppGauges.shp") |>
left_join((y = AppGages by=c('STAID','gauge_id')))
?left_join
AppGagesshp <- st_read("Data/Shapefiles/AppGauges.shp") |>
left_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
View(AppGagesshp)
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp") |>
left_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp") |>
right_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
right_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
test <- dplyrr:right_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
test <- dplyr:right_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
test <- right_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
test <- dplyr::right_join(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
test <- dplyr:::right_join.data.frame(x = AppGagesshp, y = AppGages,
by=c('STAID','gauge_id'))
test <- dplyr:::right_join.data.frame(x = AppGagesshp, y = AppGages,
by=c('STAID' = 'gauge_id'))
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp") |>
dplyr:::right_join.data.frame(x = AppGagesshp, y = AppGages,
by=c('STAID' = 'gauge_id'))
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "PROVINCE", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(AppGages)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "PROVINCE", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(AppGagesshp)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "SECTION", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(AppGagesshp)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
View(AppGagesshp)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggforce)
library(dataRetrieval)
library(sf)
library(tmap)
library(spData)
library(repr)
library(zoo)
library(lubridate)
library(moments)
library(broom)
library(AICcmodavg)
library(raster)
library(rgdal)
tmap_mode("plot")
theme_set(theme_classic())
AppRegions <- st_read("Data/Shapefiles/AppalachianRegions.shp")
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp") |>
dplyr:::right_join.data.frame(x = AppGagesshp, y = AppGages,
by=c('STAID' = 'gauge_id'))
AppGages <- read_delim("CAMELS/camels_hydr.txt")
AppGages <- read_delim("CAMELS/camels_hydro.txt")
AppGages <- read_delim("CAMELS Data/camels_hydro.txt")
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp") |>
dplyr:::right_join.data.frame(x = AppGagesshp, y = AppGages,
by=c('STAID' = 'gauge_id'))
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp") |>
gages_filtered <- AppGages |>
left_join(AppGages, AppGagesshp, by=c('gauge_id'='STAID'))
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp") |>
gages_filtered <- left_join(AppGages, AppGagesshp, by=c('gauge_id'='STAID'))
gages_filtered <- left_join(AppGages, AppGagesshp, by=c('gauge_id'='STAID'))
AppGagesshp <- read_delim("Data/Shapefiles/AppGauges.shp")
AppGagesshp <- st_read("Data/Shapefiles/AppGauges_Filtered.shp")
gages_filtered <- left_join(AppGages, AppGagesshp, by=c('gauge_id'='STAID'))
View(gages_filtered)
gages_filtered <- left_join(AppGages, AppGagesshp, by=c('gauge_id'='STAID')) |>
filter(PROVINCE != NA)
gages_filtered <- left_join(AppGages, AppGagesshp, by=c('gauge_id'='STAID')) |>
filter("PROVINCE" != NA)
gages_filtered <- inner_join(AppGages, AppGagesshp, by=c('gauge_id'='STAID'))
View(gages_filtered)
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "SECTION", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(gages_filtered)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
?st_write
?st_write.data.frame
gages_sf <- st_as_sf(gages_filtered, coords = "geometry")
gages_sf <- st_as_sf(gages_filtered)
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "SECTION", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(gages_sf)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
SAgages_sf <- st_as_sf(gages_filtered)
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "SECTION", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(gages_sf)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
st_write(SAgages_sf, "SAgages.shp")
write_csv(gages_filtered, "SAgages.csv")
AppGages <- read_csv("SAgages.csv")
AppGagesshp <- st_read("SAgages.shp")
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "SECTION", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(AppGagesshp)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
head(AppGages)
WSfactors <- full_join(read_csv("CAMELS Data/camels_clim.txt"), read_csv("CAMELS Data/camels_geol.txt"), by = "gauge_id") %>%
full_join(read_csv("CAMELS Data/camels_soil.txt"), by = "gauge_id") %>%
left_join(AppGages, by = "gauge_id")
View(AppGages)
WSfactors <- full_join(read_delim("CAMELS Data/camels_clim.txt"), read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") %>%
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id") %>%
left_join(AppGages, by = "gauge_id")
View(WSfactors)
WSfactors <- full_join(read_delim("CAMELS Data/camels_clim.txt"), read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") %>%
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id") %>%
inner_join(AppGages, by = "gauge_id")
View(WSfactors)
gc()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggforce)
library(dataRetrieval)
library(sf)
library(tmap)
library(spData)
library(repr)
library(zoo)
library(lubridate)
library(moments)
library(broom)
library(AICcmodavg)
library(raster)
library(rgdal)
tmap_mode("plot")
theme_set(theme_classic())
library(tidyverse)
library(ggforce)
library(dataRetrieval)
library(sf)
library(tmap)
library(spData)
library(repr)
library(zoo)
library(lubridate)
library(moments)
library(broom)
library(AICcmodavg)
library(raster)
library(rgdal)
tmap_mode("plot")
theme_set(theme_classic())
AppRegions <- st_read("Data/Shapefiles/AppalachianRegions.shp")
AppGages <- read_csv("SAgages.csv")
AppGagesshp <- st_read("SAgages.shp")
ProvinceMap <- tm_shape(AppRegions)+
tm_polygons(col = "SECTION", palette = "Spectral")+
tm_layout(legend.outside = TRUE)+
tm_shape(AppGagesshp)+
tm_dots()+
tm_shape(us_states)+
tm_borders()
ProvinceMap
head(AppGages)
write_csv(WSfactors, "CAMELSappsattr.csv")
WSfactors <- full_join(read_delim("CAMELS Data/camels_clim.txt"), read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") %>%
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id") %>%
inner_join(AppGages, by = "gauge_id")
write_csv(WSfactors, "CAMELSapps_attr.csv")
View(AppGages)
library(readr)
QdatDV <- read_csv("Data/QdatDV.csv")
View(QdatDV)
sitenos <- AppGages$gauge_id
parameterCd <- "00060"
startDate <- "1981-01-01"
endDate <- "2010-12-31"
{
if(i == 1){
QdatDV <- readNWISdv(sitenos[i], parameterCd, startDate, endDate)
}else{
QdatDVnew <- readNWISdv(sitenos[i], parameterCd, startDate, endDate)
QdatDV <- rbind(QdatDVnew, QdatDV)
}
}
for(i in 1:28)
{
if(i == 1){
QdatDV <- readNWISdv(sitenos[i], parameterCd, startDate, endDate)
}else{
QdatDVnew <- readNWISdv(sitenos[i], parameterCd, startDate, endDate)
QdatDV <- rbind(QdatDVnew, QdatDV)
}
}
QdatDV <- QdatDV %>% renameNWISColumns()
#cfs to mm/day
QdatDV <- QdatDV %>% mutate(Qmm_day = 2.447 * Flow / DRAIN_SQKM)
View(QdatDV)
QdvStats <- left_join(QdvStats, AppGages, by = c("site_no" = "gauge_id"))
QdatDV <- QdatDV %>% renameNWISColumns()
QdvStats <- QdatDV %>%
group_by(site_no) %>%
summarize(Mean = mean(Flow),
Median = median(Flow),
StandardDeviation = sd(Flow),
IQR = IQR(Flow),
TenthP = quantile(Flow, probs = c(0.10)),
NinetiethP = quantile(Flow, probs = c(0.9)),
Count = n())
QdvStats <- left_join(Qdv, AppGages, by = c("site_no" = "gauge_id"))
QdvStats <- left_join(QdvStats, AppGages, by = c("site_no" = "gauge_id"))
View(QdvStats)
QdvStats <- inner_join(QdvStats, AppGages, by = c("site_no" = "gauge_id"))
View(QdvStats)
QdvStats <- QdatDV %>%
group_by(site_no) %>%
summarize(Mean = mean(Flow),
Median = median(Flow),
StandardDeviation = sd(Flow),
IQR = IQR(Flow),
TenthP = quantile(Flow, probs = c(0.10)),
NinetiethP = quantile(Flow, probs = c(0.9)),
Count = n())
View(QdatDVnew)
#cfs to mm/day
QdatDV <- QdatDV %>% mutate(Qmm_day = 2.447 * Flow / DRAIN_SQKM)
View(QdvStats)
QdvStats <- inner_join(QdvStats, AppGages, by = c("site_no" = "gauge_id"))
camels_hydro <- read_delim("CAMELS Data/camels_hydro.txt")
library(tidyverse)
library(ggforce)
library(lubridate)
library(dplyr)
library(readr)
#USGS package with flow info
library(dataRetrieval)
#Packages working with geospatial data
library(sf)
library(tmap)
library(mapview)
camels_hydro <- read_delim("CAMELS Data/camels_hydro.txt")
#All other CAMELS data
camels_all <- full_join(read_delim("CAMELS Data/camels_clim.txt"),
read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_hydro.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id")
#View Camels hydrology:
head(camels_hydro)
View(camels_all)
camels_hydro <- read_delim("CAMELS Data/camels_hydro.txt")
#All other CAMELS data
camels_all <- full_join(read_delim("CAMELS Data/camels_clim.txt"),
read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_hydro.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id")
#View Camels hydrology:
head(camels_hydro)
#All other CAMELS data
camels_all <- full_join(read_delim("CAMELS Data/camels_clim.txt"),
read_delim("CAMELS Data/camels_geol.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_hydro.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_soil.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_topo.txt"), by = "gauge_id") |>
full_join(read_delim("CAMELS Data/camels_vege.txt"), by = "gauge_id")
test <- read_delim("CAMELS Data/camels_name.txt")
View(test)
